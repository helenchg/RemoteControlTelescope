/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:button_fanOn:285534:
  println("Fans: ON");
  myPort.write("ON");
} //_CODE_:button_fanOn:285534:

public void button1_click2(GButton source, GEvent event) { //_CODE_:button_fansOff:818199:
  println("Fans: OFF");
  myPort.write("OFF");

} //_CODE_:button_fansOff:818199:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  button_fanOn = new GButton(this, 383, 29, 80, 30);
  button_fanOn.setText("FANS ON");
  button_fanOn.addEventHandler(this, "button1_click1");
  button_fansOff = new GButton(this, 383, 66, 80, 30);
  button_fansOff.setText("FANS OFF");
  button_fansOff.addEventHandler(this, "button1_click2");
//  label_temperature = new GLabel(this, 382, 114, 80, 20);
//  label_temperature.setText("" + temperature + " Â°C");
//  label_temperature.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton button_fanOn; 
GButton button_fansOff; 
GLabel label_temperature; 

